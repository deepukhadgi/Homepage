# Complete K3s deployment manifests for hacker homepage
# Apply with: kubectl apply -f k3s-deployment-manifests.yaml

---
apiVersion: v1
kind: Namespace
metadata:
  name: hacker-site
  labels:
    name: hacker-site

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: hacker-site
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/javascript text/xml application/xml text/javascript application/json;
        
        location / {
            try_files $uri $uri/ =404;
        }
        
        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Security - block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hacker-homepage
  namespace: hacker-site
  labels:
    app: hacker-homepage
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: hacker-homepage
  template:
    metadata:
      labels:
        app: hacker-homepage
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: website-content
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: website-content
        configMap:
          name: website-content
      - name: nginx-config
        configMap:
          name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: hacker-homepage-service
  namespace: hacker-site
  labels:
    app: hacker-homepage
spec:
  selector:
    app: hacker-homepage
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hacker-homepage-ingress
  namespace: hacker-site
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - deepukhadgi.com.np
    - www.deepukhadgi.com.np
    secretName: hacker-homepage-tls
  rules:
  - host: deepukhadgi.com.np
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hacker-homepage-service
            port:
              number: 80
  - host: www.deepukhadgi.com.np
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hacker-homepage-service
            port:
              number: 80

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@deepukhadgi.com.np
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: admin@deepukhadgi.com.np
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: default
  namespace: metallb-system
spec:
  addresses:
  - 192.168.1.240-192.168.1.250

---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: default
  namespace: metallb-system
spec:
  ipAddressPools:
  - default

---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: hacker-homepage-monitor
  namespace: hacker-site
  labels:
    app: hacker-homepage
spec:
  selector:
    matchLabels:
      app: hacker-homepage
  endpoints:
  - port: http
    interval: 30s
    path: /

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: hacker-homepage-pdb
  namespace: hacker-site
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: hacker-homepage
